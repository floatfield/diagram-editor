var _user$project$ComponentsViews$lineView = F4(
	function (selected, componentOpacity, click, l) {
		var endY = _elm_lang$core$Basics$toString(l.end.y);
		var endX = _elm_lang$core$Basics$toString(l.end.x);
		var startY = _elm_lang$core$Basics$toString(l.start.y);
		var startX = _elm_lang$core$Basics$toString(l.start.x);
		return A2(
			_elm_lang$svg$Svg$line,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$x1(startX),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$y1(startY),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$x2(endX),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$y2(endY),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$stroke('red'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$strokeWidth('2'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$opacity(componentOpacity),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Events$onClick(click),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$ComponentsViews$ellipseView = F4(
	function (selected, componentOpacity, click, el) {
		var elRy = _elm_lang$core$Basics$toString(el.ry);
		var elRx = _elm_lang$core$Basics$toString(el.rx);
		var elCy = _elm_lang$core$Basics$toString(el.y);
		var elCx = _elm_lang$core$Basics$toString(el.x);
		return A2(
			_elm_lang$svg$Svg$ellipse,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$cx(elCx),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$cy(elCy),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$rx(elRx),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$ry(elRy),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$opacity(componentOpacity),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Events$onClick(click),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$ComponentsViews$componentView = F2(
	function (selectedComponent, _p0) {
		var _p1 = _p0;
		var _p4 = _p1._1;
		var selected = function () {
			var _p2 = selectedComponent;
			if (_p2.ctor === 'Nothing') {
				return false;
			} else {
				return _elm_lang$core$Native_Utils.eq(_p2._0, _p4);
			}
		}();
		var componentOpacity = selected ? '0.8' : '1';
		var click = (!selected) ? _user$project$Msgs$SelectComponent(_p4) : _user$project$Msgs$UnselectComponent;
		var _p3 = _p1._0;
		if (_p3.ctor === 'EllipseComponent') {
			return A4(_user$project$ComponentsViews$ellipseView, selected, componentOpacity, click, _p3._0);
		} else {
			return A4(_user$project$ComponentsViews$lineView, selected, componentOpacity, click, _p3._0);
		}
	});
